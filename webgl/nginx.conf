server {
    listen 80;
    server_name scene.digitaltwin.technology;

    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name scene.digitaltwin.technology;

    ssl_certificate /etc/letsencrypt/live/scene.digitaltwin.technology/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/scene.digitaltwin.technology/privkey.pem;

    root /usr/share/nginx/html;
    index index.html;

    # Serve precompressed Brotli (.br) or gzip (.gz) files if they exist
    location / {
        index index.html;
        try_files $uri $uri.br $uri.gz $uri/ /index.html;
    }

    # Brotli-precompressed data files
    location ~ .+\.(data|symbols\.json)\.br$ {
        gzip off;
        add_header Content-Encoding br;
        default_type application/octet-stream;
    }

    # Brotli-precompressed JavaScript files
    location ~ .+\.js\.br$ {
        gzip off;
        add_header Content-Encoding br;
        default_type application/javascript;
    }

    # Brotli-precompressed WebAssembly files
    location ~ .+\.wasm\.br$ {
        gzip off;
        add_header Content-Encoding br;
        default_type application/wasm;
    }

    # Gzip-precompressed data files
    location ~ .+\.(data|symbols\.json)\.gz$ {
        gzip off;
        add_header Content-Encoding gzip;
        default_type application/octet-stream;
    }

    # Gzip-precompressed JavaScript files
    location ~ .+\.js\.gz$ {
        gzip off;
        add_header Content-Encoding gzip;
        default_type application/javascript;
    }

    # Gzip-precompressed WebAssembly files
    location ~ .+\.wasm\.gz$ {
        gzip off;
        add_header Content-Encoding gzip;
        default_type application/wasm;
    }

    # Serve HTML, JS, and other static files with appropriate CORS policies
    location ~ .+\.(htm|html|js|js\.gz|js\.br)$ {
        add_header Cross-Origin-Opener-Policy same-origin;
        add_header Cross-Origin-Embedder-Policy require-corp;
        add_header Cross-Origin-Resource-Policy cross-origin;
    }

    # Enable CORS for all requests
    add_header Access-Control-Allow-Origin *;
}
